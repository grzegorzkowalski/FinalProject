{"ast":null,"code":"var _jsxFileName = \"D:\\\\Petro\\\\FinalProject\\\\src\\\\componemts\\\\home\\\\Formularz.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Form, Button } from 'react-bootstrap';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; // Styled-components styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: auto;\n  width: 90%;\n  margin: 5em auto;\n  color: snow;\n  -webkit-box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\n  -moz-box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\n  box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\n\n  @media(min-width: 786px) {\n    width: 60%;\n  }\n\n  label {\n    color: #24B9B6;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n\n  h1 {\n    color: #24B9B6;\n    padding-top: .5em;\n  }\n\n  .form-group {\n    margin-bottom: 2.5em;\n  }\n`;\n_c = CONTAINER;\nconst MYFORM = styled(Form)`\n  width: 90%;\n  text-align: left;\n  padding-top: 2em;\n  padding-bottom: 2em;\n\n  @media(min-width: 786px) {\n    width: 50%;\n  }\n`;\n_c2 = MYFORM;\nconst BUTTON = styled(Button)`\n  background: #1863AB;\n  border: none;\n  font-size: 1.2em;\n  font-weight: 400;\n\n  &:hover {\n    background: #1D3461;\n  }\n`;\n_c3 = BUTTON;\n\nconst Formularz = () => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"*Names must have at least 2 characters\").max(8, \"*Names can't be longer than 100 characters\").required(\"*Name is required\"),\n    email: Yup.string().email(\"*Must be a valid email address\").max(8, \"*Email must be less than 100 characters\").required(\"*Email is required\"),\n    phone: Yup.string().required(\"*Phone number required\"),\n    blog: Yup.string().url(\"*Must enter URL in http://www.example.com format\").required(\"*URL required\")\n  });\n  return /*#__PURE__*/_jsxDEV(CONTAINER, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        blog: \"\"\n      } // Hooks up our validationSchema to Formik\n      ,\n      validationSchema: validationSchema,\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(MYFORM, {\n        className: \"mx-auto\",\n        children: [console.log(values), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\"\n            /* This name property is used to access the value of the form element via values.nameOfElement */\n            ,\n            name: \"name\",\n            placeholder: \"Full Name\"\n            /* Set onChange to handleChange */\n            ,\n            onChange: handleChange\n            /* Set onBlur to handleBlur */\n            ,\n            onBlur: handleBlur\n            /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\n            ,\n            value: values.name\n            /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\n            ,\n            className: touched.name && errors.name ? \"error\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), touched.name && errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email,\n            className: touched.email && errors.email ? \"error\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), touched.email && errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPhone\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"phone\",\n            placeholder: \"Phone\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.phone,\n            className: touched.phone && errors.phone ? \"error\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), touched.phone && errors.phone ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBlog\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Blog :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"blog\",\n            placeholder: \"Blog URL\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.blog,\n            className: touched.blog && errors.blog ? \"error\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), touched.blog && errors.blog ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.blog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BUTTON, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Formularz;\nexport default Formularz;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CONTAINER\");\n$RefreshReg$(_c2, \"MYFORM\");\n$RefreshReg$(_c3, \"BUTTON\");\n$RefreshReg$(_c4, \"Formularz\");","map":{"version":3,"sources":["D:/Petro/FinalProject/src/componemts/home/Formularz.js"],"names":["React","styled","Form","Button","Formik","Yup","CONTAINER","div","MYFORM","BUTTON","Formularz","validationSchema","object","shape","name","string","min","max","required","email","phone","blog","url","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// Styled-components styles\r\nconst CONTAINER = styled.div`\r\n  background: #F7F9FA;\r\n  height: auto;\r\n  width: 90%;\r\n  margin: 5em auto;\r\n  color: snow;\r\n  -webkit-box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\r\n  -moz-box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\r\n  box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.4);\r\n\r\n  @media(min-width: 786px) {\r\n    width: 60%;\r\n  }\r\n\r\n  label {\r\n    color: #24B9B6;\r\n    font-size: 1.2em;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h1 {\r\n    color: #24B9B6;\r\n    padding-top: .5em;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 2.5em;\r\n  }\r\n`;\r\n\r\nconst MYFORM = styled(Form)`\r\n  width: 90%;\r\n  text-align: left;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n\r\n  @media(min-width: 786px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst BUTTON = styled(Button)`\r\n  background: #1863AB;\r\n  border: none;\r\n  font-size: 1.2em;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    background: #1D3461;\r\n  }\r\n`;\r\n\r\nconst Formularz = () => {\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .min(2, \"*Names must have at least 2 characters\")\r\n            .max(8, \"*Names can't be longer than 100 characters\")\r\n            .required(\"*Name is required\"),\r\n        email: Yup.string()\r\n            .email(\"*Must be a valid email address\")\r\n            .max(8, \"*Email must be less than 100 characters\")\r\n            .required(\"*Email is required\"),\r\n        phone: Yup.string()\r\n            .required(\"*Phone number required\"),\r\n        blog: Yup.string()\r\n            .url(\"*Must enter URL in http://www.example.com format\")\r\n            .required(\"*URL required\")\r\n    });\r\n    return (\r\n        <CONTAINER>\r\n            <Formik\r\n                initialValues={{ name:\"\", email:\"\", phone:\"\", blog:\"\"}}\r\n                // Hooks up our validationSchema to Formik\r\n                validationSchema={validationSchema}\r\n            >\r\n                {/* Callback function containing Formik state and helpers that handle common form actions */}\r\n                {( {values,\r\n                       errors,\r\n                       touched,\r\n                       handleChange,\r\n                       handleBlur,\r\n                       handleSubmit,\r\n                       isSubmitting }) => (\r\n                    <MYFORM className=\"mx-auto\">\r\n                        {console.log(values)}\r\n                        <Form.Group controlId=\"formName\">\r\n                            <Form.Label>Name :</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                name=\"name\"\r\n                                placeholder=\"Full Name\"\r\n                                /* Set onChange to handleChange */\r\n                                onChange={handleChange}\r\n                                /* Set onBlur to handleBlur */\r\n                                onBlur={handleBlur}\r\n                                /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                value={values.name}\r\n                                /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                className={touched.name && errors.name ? \"error\" : null}\r\n                            />\r\n                            {/* Applies the proper error message from validateSchema when the user has clicked the element and there is an error, also applies the .error-message CSS class for styling */}\r\n                            {touched.name && errors.name ? (\r\n                                <div className=\"error-message\">{errors.name}</div>\r\n                            ): null}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formEmail\">\r\n                            <Form.Label>Email :</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                className={touched.email && errors.email ? \"error\" : null}\r\n                            />\r\n                            {touched.email && errors.email ? (\r\n                                <div className=\"error-message\">{errors.email}</div>\r\n                            ): null}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formPhone\">\r\n                            <Form.Label>Phone :</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Phone\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.phone}\r\n                                className={touched.phone && errors.phone ? \"error\" : null}\r\n                            />\r\n                            {touched.phone && errors.phone ? (\r\n                                <div className=\"error-message\">{errors.phone}</div>\r\n                            ): null}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBlog\">\r\n                            <Form.Label>Blog :</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"blog\"\r\n                                placeholder=\"Blog URL\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.blog}\r\n                                className={touched.blog && errors.blog ? \"error\" : null}\r\n                            />\r\n                            {touched.blog && errors.blog ? (\r\n                                <div className=\"error-message\">{errors.blog}</div>\r\n                            ): null}\r\n                        </Form.Group>\r\n                        <BUTTON variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </BUTTON>\r\n                    </MYFORM>\r\n                )}\r\n            </Formik>\r\n        </CONTAINER>\r\n    );\r\n}\r\n\r\n\r\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}