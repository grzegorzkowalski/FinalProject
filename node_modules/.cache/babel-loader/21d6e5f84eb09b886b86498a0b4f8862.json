{"ast":null,"code":"var _jsxFileName = \"D:\\\\Petro\\\\FinalProject\\\\src\\\\componemts\\\\home\\\\Formularz.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Form, Button } from 'react-bootstrap';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; // Styled-components styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MYFORM = styled(Form)`\n  width: 90%;\n  text-align: left;\n  padding-top: 2em;\n  padding-bottom: 2em;\n\n  @media(min-width: 786px) {\n    width: 50%;\n  }\n`;\n_c = MYFORM;\nconst BUTTON = styled(Button)`\n  background: #1863AB;\n  border: none;\n  font-size: 1.2em;\n  font-weight: 400;\n\n  &:hover {\n    background: #1D3461;\n  }\n`;\n_c2 = BUTTON;\n\nconst Formularz = () => {\n  const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().min(2, \"*Names must have at least 2 characters\").max(8, \"*Names can't be longer than 100 characters\").required(\"*Name is required\"),\n    email: Yup.string().email(\"*Must be a valid email address\").max(8, \"*Email must be less than 100 characters\").required(\"*Email is required\"),\n    phone: Yup.string().matches(phoneRegExp, \"*Phone number is not valid\").required(\"*Phone number required\"),\n    blog: Yup.string().url(\"*Must enter URL in http://www.example.com format\").required(\"*URL required\")\n  });\n  return /*#__PURE__*/_jsxDEV(CONTAINER, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        blog: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(MYFORM, {\n        className: \"mx-auto\",\n        onSubmit: handleSubmit,\n        children: [console.log(values), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Full Name\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.name,\n            className: touched.name && errors.name ? \"error\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), touched.name && errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPhone\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"phone\",\n            placeholder: \"Phone\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBlog\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Blog :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"blog\",\n            placeholder: \"Blog URL\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.blog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(BUTTON, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Formularz;\nexport default Formularz;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MYFORM\");\n$RefreshReg$(_c2, \"BUTTON\");\n$RefreshReg$(_c3, \"Formularz\");","map":{"version":3,"sources":["D:/Petro/FinalProject/src/componemts/home/Formularz.js"],"names":["React","styled","Form","Button","Formik","Yup","MYFORM","BUTTON","Formularz","phoneRegExp","validationSchema","object","shape","name","string","min","max","required","email","phone","matches","blog","url","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// Styled-components styles\r\n\r\n\r\nconst MYFORM = styled(Form)`\r\n  width: 90%;\r\n  text-align: left;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n\r\n  @media(min-width: 786px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst BUTTON = styled(Button)`\r\n  background: #1863AB;\r\n  border: none;\r\n  font-size: 1.2em;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    background: #1D3461;\r\n  }\r\n`;\r\n\r\nconst Formularz = () => {\r\n    const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .min(2, \"*Names must have at least 2 characters\")\r\n            .max(8, \"*Names can't be longer than 100 characters\")\r\n            .required(\"*Name is required\"),\r\n        email: Yup.string()\r\n            .email(\"*Must be a valid email address\")\r\n            .max(8, \"*Email must be less than 100 characters\")\r\n            .required(\"*Email is required\"),\r\n        phone: Yup.string()\r\n            .matches(phoneRegExp, \"*Phone number is not valid\")\r\n            .required(\"*Phone number required\"),\r\n        blog: Yup.string()\r\n            .url(\"*Must enter URL in http://www.example.com format\")\r\n            .required(\"*URL required\")\r\n    });\r\n    return (\r\n        <CONTAINER>\r\n            <Formik initialValues={{ name:\"\", email:\"\", phone:\"\", blog:\"\"}}\r\n            validationSchema={validationSchema}\r\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setSubmitting(true);\r\n                        setTimeout(() => {\r\n                            alert(JSON.stringify(values, null, 2));\r\n                            resetForm();\r\n                            setSubmitting(false);\r\n                        }, 500);\r\n                    }}\r\n            >\r\n                {( {values,\r\n                       errors,\r\n                       touched,\r\n                       handleChange,\r\n                       handleBlur,\r\n                       handleSubmit,\r\n                       isSubmitting }) =>(\r\n                        <MYFORM className=\"mx-auto\" onSubmit={handleSubmit}>\r\n                            {console.log(values)}\r\n                            <Form.Group controlId=\"formName\">\r\n                                <Form.Label>Name :</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Full Name\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.name && errors.name ? \"error\" : null}\r\n                                />\r\n                                {touched.name && errors.name ? (\r\n                                    <div className=\"error-message\">{errors.name}</div>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formEmail\">\r\n                                <Form.Label>Email :</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formPhone\">\r\n                                <Form.Label>Phone :</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Phone\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.phone}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBlog\">\r\n                                <Form.Label>Blog :</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"blog\"\r\n                                    placeholder=\"Blog URL\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.blog}\r\n                                />\r\n                            </Form.Group>\r\n                            <BUTTON variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                                Submit\r\n                            </BUTTON>\r\n                        </MYFORM>\r\n                    )}\r\n\r\n            </Formik>\r\n        </CONTAINER>\r\n    );\r\n}\r\n\r\n\r\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}