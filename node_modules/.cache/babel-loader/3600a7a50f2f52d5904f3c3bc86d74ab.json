{"ast":null,"code":"// import React, {useRef, useState} from \"react\";\n// import {Form, Button, Card, Container, Alert} from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import {AuthProvider, useAuth} from \"../../AuthContext\";\n// import {Link, useHistory} from \"react-router-dom\";\n// import HeaderNav from \"../home/HeaderNav\";\n// export default function UpdateProfile() {\n//     const emailRef = useRef()\n//     const passwordRef = useRef()\n//     const passwordConfRef = useRef()\n//     const {currentUser, updatePassword, updateEmail} = useAuth\n//     const [error, setError] = useState(\"\")\n//     const [loading, setLoading] = useState(false)\n//     const history = useHistory()\n//     //\n//      function handleSubmit(e) {\n//         e.preventDefault()\n//         if (passwordRef.current.value !== passwordConfRef.current.value) {\n//             return setError(\"Passwords do not match\")\n//         }\n//         const promises = []\n//         setLoading(true)\n//         setError(\"\")\n//         if (emailRef.current.value !== currentUser.email) {\n//             promises.push(updateEmail(emailRef.current.value))\n//         }\n//         if (passwordRef.current.value) {\n//             promises.push(updatePassword(passwordRef.current.value))\n//         }\n//         Promise.all(promises).then(() => {\n//             history.push('/')\n//         }).catch(() => {\n//             setError('Nie udało się zaktualizować konta')\n//         }).finally(() => {\n//             setLoading(false)\n//         })\n//     }\n//     return (\n//         <>\n//             <HeaderNav/>\n//             <AuthProvider>\n//             <div className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\n//                 <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n//                     <Container>\n//                         <Card>\n//                             <Card.Body>\n//                                 <h2 className=\"text-center mb-4\">Zaktualizuj dane</h2>\n//                                 {error && <Alert variant=\"danger\">{error}</Alert> }\n//                                 <Form onSubmit={handleSubmit}>\n//                                     <Form.Group id=\"email\">\n//                                         <Form.Label>Email</Form.Label>\n//                                         <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email}/>\n//                                     </Form.Group>\n//                                     <Form.Group id=\"password\">\n//                                         <Form.Label>Password</Form.Label>\n//                                         <Form.Control type=\"password\" ref={passwordRef}  placeholder=\"Leave blank to keep the same\"/>\n//                                     </Form.Group>\n//                                     <Form.Group id=\"password-confirm\">\n//                                         <Form.Label>Password Confirmation</Form.Label>\n//                                         <Form.Control type=\"password\" ref={passwordConfRef} placeholder=\"Leave blank to keep the same\"/>\n//                                     </Form.Group>\n//                                     <Button disabled={loading} className=\"w-100\" type=\"submit\">Zaktualizuj</Button>\n//                                 </Form>\n//                             </Card.Body>\n//                         </Card>\n//                         <div className=\"w-100 text-center mt-2\">\n//                              <Link to=\"/\">Odrzuć</Link>\n//                         </div>\n//                     </Container>\n//                 </div>\n//             </div>\n//         </AuthProvider>\n//             </>\n//     )\n// }","map":{"version":3,"sources":["D:/Petro/FinalProject/src/componemts/authentication/UpdateProfile.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, {useRef, useState} from \"react\";\r\n// import {Form, Button, Card, Container, Alert} from \"react-bootstrap\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import {AuthProvider, useAuth} from \"../../AuthContext\";\r\n// import {Link, useHistory} from \"react-router-dom\";\r\n// import HeaderNav from \"../home/HeaderNav\";\r\n\r\n// export default function UpdateProfile() {\r\n//     const emailRef = useRef()\r\n//     const passwordRef = useRef()\r\n//     const passwordConfRef = useRef()\r\n//     const {currentUser, updatePassword, updateEmail} = useAuth\r\n//     const [error, setError] = useState(\"\")\r\n//     const [loading, setLoading] = useState(false)\r\n//     const history = useHistory()\r\n//     //\r\n//      function handleSubmit(e) {\r\n//         e.preventDefault()\r\n//         if (passwordRef.current.value !== passwordConfRef.current.value) {\r\n//             return setError(\"Passwords do not match\")\r\n//         }\r\n//         const promises = []\r\n//         setLoading(true)\r\n//         setError(\"\")\r\n//         if (emailRef.current.value !== currentUser.email) {\r\n//             promises.push(updateEmail(emailRef.current.value))\r\n//         }\r\n//         if (passwordRef.current.value) {\r\n//             promises.push(updatePassword(passwordRef.current.value))\r\n//         }\r\n//         Promise.all(promises).then(() => {\r\n//             history.push('/')\r\n//         }).catch(() => {\r\n//             setError('Nie udało się zaktualizować konta')\r\n//         }).finally(() => {\r\n//             setLoading(false)\r\n//         })\r\n    \r\n//     }\r\n\r\n\r\n//     return (\r\n//         <>\r\n//             <HeaderNav/>\r\n//             <AuthProvider>\r\n//             <div className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n//                 <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n//                     <Container>\r\n//                         <Card>\r\n//                             <Card.Body>\r\n//                                 <h2 className=\"text-center mb-4\">Zaktualizuj dane</h2>\r\n//                                 {error && <Alert variant=\"danger\">{error}</Alert> }\r\n//                                 <Form onSubmit={handleSubmit}>\r\n//                                     <Form.Group id=\"email\">\r\n//                                         <Form.Label>Email</Form.Label>\r\n//                                         <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n//                                     </Form.Group>\r\n//                                     <Form.Group id=\"password\">\r\n//                                         <Form.Label>Password</Form.Label>\r\n//                                         <Form.Control type=\"password\" ref={passwordRef}  placeholder=\"Leave blank to keep the same\"/>\r\n//                                     </Form.Group>\r\n//                                     <Form.Group id=\"password-confirm\">\r\n//                                         <Form.Label>Password Confirmation</Form.Label>\r\n//                                         <Form.Control type=\"password\" ref={passwordConfRef} placeholder=\"Leave blank to keep the same\"/>\r\n//                                     </Form.Group>\r\n//                                     <Button disabled={loading} className=\"w-100\" type=\"submit\">Zaktualizuj</Button>\r\n//                                 </Form>\r\n//                             </Card.Body>\r\n//                         </Card>\r\n//                         <div className=\"w-100 text-center mt-2\">\r\n//                              <Link to=\"/\">Odrzuć</Link>\r\n//                         </div>\r\n//                     </Container>\r\n//                 </div>\r\n//             </div>\r\n//         </AuthProvider>\r\n//             </>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}